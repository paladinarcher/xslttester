<!-- Used to adjust SDA generated by CDA to use IDs from metadata, and DoReplace parameter -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
				xmlns:isc="http://extension-functions.intersystems.com"
				version="1.0">
	<xsl:output method="xml" indent="no" encoding="ISO-8859-1"/>
	<xsl:param name="MRN"/>
	<xsl:param name="AA"/>
	<xsl:param name="Facility"/>
	<xsl:param name="MPIID"/>
	<xsl:param name="DoReplace"/>
	<xsl:param name="GetStream"/>
	<xsl:strip-space elements="*"/>

	<xsl:template match="node()|@*">
		<xsl:copy>
			<xsl:apply-templates select="node()|@*"/>
		</xsl:copy>
	</xsl:template>
	
	<xsl:template match="SendingFacility">
		<SendingFacility><xsl:value-of select="$Facility"/></SendingFacility>
	</xsl:template>
	
	<xsl:template match="Container">
	<Container>
		<EventDescription>Query</EventDescription>
		<xsl:apply-templates select="node()|@*"/>
		<xsl:value-of select="isc:evaluate('getQuickStream',$GetStream)" disable-output-escaping="yes"/>
		<!-- If the SendingFacility is not in the imported SDA add it now -->
		<xsl:if test="not(SendingFacility)">
			<SendingFacility><xsl:value-of select="$Facility"/></SendingFacility>
		</xsl:if>
    </Container>
	</xsl:template>
	
	<xsl:template match="Patient">
	<Patient>
		<xsl:if test="$DoReplace='Y'">
			<ActionCode>R</ActionCode>
		</xsl:if>
		<xsl:apply-templates select="node()|@*"/>
	</Patient>
	</xsl:template>
	
	<xsl:template match="Patient/MPIID">
		<MPIID><xsl:value-of select="$MPIID"/></MPIID>
	</xsl:template>
	
	<xsl:template match="PatientNumbers/PatientNumber[NumberType = 'MRN']">
	<PatientNumber>
	<Number><xsl:value-of select="$MRN"/></Number>
	<NumberType>MRN</NumberType>
	<Organization>
	<Code><xsl:value-of select="$AA"/></Code>
	<Description><xsl:value-of select="$AA"/></Description>
	</Organization>
	</PatientNumber>
	</xsl:template>

    <!-- If MRN isn't in the imported SDA add it now -->
    <xsl:template match="PatientNumbers">
        <PatientNumbers>
            <xsl:apply-templates select="node()|@*"/>
            <xsl:if test="not(PatientNumber[NumberType = 'MRN'])">
                <PatientNumber>
                    <Number><xsl:value-of select="$MRN"/></Number>
                    <NumberType>MRN</NumberType>
                    <Organization>
                        <Code><xsl:value-of select="$AA"/></Code>
                        <Description><xsl:value-of select="$AA"/></Description>
                    </Organization>
                </PatientNumber>
            </xsl:if>
        </PatientNumbers>
    </xsl:template>
   
</xsl:stylesheet>